#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PracTestDatabase")]
	public partial class DataClasses2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertProduct_Review(Product_Review instance);
    partial void UpdateProduct_Review(Product_Review instance);
    partial void DeleteProduct_Review(Product_Review instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public DataClasses2DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PracTestDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Product_Review> Product_Reviews
		{
			get
			{
				return this.GetTable<Product_Review>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _ContactNo;
		
		private System.DateTime _DateofBirth;
		
		private string _User_Type;
		
		private string _Password;
		
		private System.DateTime _User_CreateDate;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Product_Review> _Product_Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnDateofBirthChanging(System.DateTime value);
    partial void OnDateofBirthChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUser_CreateDateChanging(System.DateTime value);
    partial void OnUser_CreateDateChanged();
    #endregion
		
		public User()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Product_Reviews = new EntitySet<Product_Review>(new Action<Product_Review>(this.attach_Product_Reviews), new Action<Product_Review>(this.detach_Product_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="Date NOT NULL")]
		public System.DateTime DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime User_CreateDate
		{
			get
			{
				return this._User_CreateDate;
			}
			set
			{
				if ((this._User_CreateDate != value))
				{
					this.OnUser_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._User_CreateDate = value;
					this.SendPropertyChanged("User_CreateDate");
					this.OnUser_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_Carts", ThisKey="User_Id", OtherKey="Cart_UserID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product_Review", Storage="_Product_Reviews", ThisKey="User_Id", OtherKey="Review_UserID")]
		public EntitySet<Product_Review> Product_Reviews
		{
			get
			{
				return this._Product_Reviews;
			}
			set
			{
				this._Product_Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Product_Reviews(Product_Review entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Product_Reviews(Product_Review entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Cart_UserID;
		
		private int _Cart_ProdID;
		
		private int _Quantity;
		
		private EntityRef<User> _User;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCart_UserIDChanging(int value);
    partial void OnCart_UserIDChanged();
    partial void OnCart_ProdIDChanging(int value);
    partial void OnCart_ProdIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public Cart()
		{
			this._User = default(EntityRef<User>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_UserID", DbType="Int NOT NULL")]
		public int Cart_UserID
		{
			get
			{
				return this._Cart_UserID;
			}
			set
			{
				if ((this._Cart_UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCart_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Cart_UserID = value;
					this.SendPropertyChanged("Cart_UserID");
					this.OnCart_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_ProdID", DbType="Int NOT NULL")]
		public int Cart_ProdID
		{
			get
			{
				return this._Cart_ProdID;
			}
			set
			{
				if ((this._Cart_ProdID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCart_ProdIDChanging(value);
					this.SendPropertyChanging();
					this._Cart_ProdID = value;
					this.SendPropertyChanged("Cart_ProdID");
					this.OnCart_ProdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_User", ThisKey="Cart_UserID", OtherKey="User_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._Cart_UserID = value.User_Id;
					}
					else
					{
						this._Cart_UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart", Storage="_Product", ThisKey="Cart_ProdID", OtherKey="Prod_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._Cart_ProdID = value.Prod_Id;
					}
					else
					{
						this._Cart_ProdID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Review")]
	public partial class Product_Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Review_Id;
		
		private int _Review_UserID;
		
		private int _Review_ProdID;
		
		private string _Review_Message;
		
		private System.Nullable<int> _Rating;
		
		private System.DateTime _ReviewDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReview_IdChanging(int value);
    partial void OnReview_IdChanged();
    partial void OnReview_UserIDChanging(int value);
    partial void OnReview_UserIDChanged();
    partial void OnReview_ProdIDChanging(int value);
    partial void OnReview_ProdIDChanged();
    partial void OnReview_MessageChanging(string value);
    partial void OnReview_MessageChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    #endregion
		
		public Product_Review()
		{
			this._User = default(EntityRef<User>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Review_Id
		{
			get
			{
				return this._Review_Id;
			}
			set
			{
				if ((this._Review_Id != value))
				{
					this.OnReview_IdChanging(value);
					this.SendPropertyChanging();
					this._Review_Id = value;
					this.SendPropertyChanged("Review_Id");
					this.OnReview_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review_UserID", DbType="Int NOT NULL")]
		public int Review_UserID
		{
			get
			{
				return this._Review_UserID;
			}
			set
			{
				if ((this._Review_UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReview_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Review_UserID = value;
					this.SendPropertyChanged("Review_UserID");
					this.OnReview_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review_ProdID", DbType="Int NOT NULL")]
		public int Review_ProdID
		{
			get
			{
				return this._Review_ProdID;
			}
			set
			{
				if ((this._Review_ProdID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReview_ProdIDChanging(value);
					this.SendPropertyChanging();
					this._Review_ProdID = value;
					this.SendPropertyChanged("Review_ProdID");
					this.OnReview_ProdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review_Message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Review_Message
		{
			get
			{
				return this._Review_Message;
			}
			set
			{
				if ((this._Review_Message != value))
				{
					this.OnReview_MessageChanging(value);
					this.SendPropertyChanging();
					this._Review_Message = value;
					this.SendPropertyChanged("Review_Message");
					this.OnReview_MessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product_Review", Storage="_User", ThisKey="Review_UserID", OtherKey="User_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Product_Reviews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Product_Reviews.Add(this);
						this._Review_UserID = value.User_Id;
					}
					else
					{
						this._Review_UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Review", Storage="_Product", ThisKey="Review_ProdID", OtherKey="Prod_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Reviews.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Reviews.Add(this);
						this._Review_ProdID = value.Prod_Id;
					}
					else
					{
						this._Review_ProdID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Prod_Id;
		
		private string _Prod_Name;
		
		private string _Prod_Description;
		
		private string _Prod_Category;
		
		private decimal _Prod_Price;
		
		private string _Prod_Size;
		
		private string _Prod_Color;
		
		private int _Quantity;
		
		private string _Prod_Image;
		
		private System.DateTime _Prod_CreateDate;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Product_Review> _Product_Reviews;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProd_IdChanging(int value);
    partial void OnProd_IdChanged();
    partial void OnProd_NameChanging(string value);
    partial void OnProd_NameChanged();
    partial void OnProd_DescriptionChanging(string value);
    partial void OnProd_DescriptionChanged();
    partial void OnProd_CategoryChanging(string value);
    partial void OnProd_CategoryChanged();
    partial void OnProd_PriceChanging(decimal value);
    partial void OnProd_PriceChanged();
    partial void OnProd_SizeChanging(string value);
    partial void OnProd_SizeChanged();
    partial void OnProd_ColorChanging(string value);
    partial void OnProd_ColorChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnProd_ImageChanging(string value);
    partial void OnProd_ImageChanged();
    partial void OnProd_CreateDateChanging(System.DateTime value);
    partial void OnProd_CreateDateChanged();
    #endregion
		
		public Product()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Product_Reviews = new EntitySet<Product_Review>(new Action<Product_Review>(this.attach_Product_Reviews), new Action<Product_Review>(this.detach_Product_Reviews));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Prod_Id
		{
			get
			{
				return this._Prod_Id;
			}
			set
			{
				if ((this._Prod_Id != value))
				{
					this.OnProd_IdChanging(value);
					this.SendPropertyChanging();
					this._Prod_Id = value;
					this.SendPropertyChanged("Prod_Id");
					this.OnProd_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prod_Name
		{
			get
			{
				return this._Prod_Name;
			}
			set
			{
				if ((this._Prod_Name != value))
				{
					this.OnProd_NameChanging(value);
					this.SendPropertyChanging();
					this._Prod_Name = value;
					this.SendPropertyChanged("Prod_Name");
					this.OnProd_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Prod_Description
		{
			get
			{
				return this._Prod_Description;
			}
			set
			{
				if ((this._Prod_Description != value))
				{
					this.OnProd_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Prod_Description = value;
					this.SendPropertyChanged("Prod_Description");
					this.OnProd_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prod_Category
		{
			get
			{
				return this._Prod_Category;
			}
			set
			{
				if ((this._Prod_Category != value))
				{
					this.OnProd_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Prod_Category = value;
					this.SendPropertyChanged("Prod_Category");
					this.OnProd_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Prod_Price
		{
			get
			{
				return this._Prod_Price;
			}
			set
			{
				if ((this._Prod_Price != value))
				{
					this.OnProd_PriceChanging(value);
					this.SendPropertyChanging();
					this._Prod_Price = value;
					this.SendPropertyChanged("Prod_Price");
					this.OnProd_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prod_Size
		{
			get
			{
				return this._Prod_Size;
			}
			set
			{
				if ((this._Prod_Size != value))
				{
					this.OnProd_SizeChanging(value);
					this.SendPropertyChanging();
					this._Prod_Size = value;
					this.SendPropertyChanged("Prod_Size");
					this.OnProd_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Color", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prod_Color
		{
			get
			{
				return this._Prod_Color;
			}
			set
			{
				if ((this._Prod_Color != value))
				{
					this.OnProd_ColorChanging(value);
					this.SendPropertyChanging();
					this._Prod_Color = value;
					this.SendPropertyChanged("Prod_Color");
					this.OnProd_ColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_Image", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prod_Image
		{
			get
			{
				return this._Prod_Image;
			}
			set
			{
				if ((this._Prod_Image != value))
				{
					this.OnProd_ImageChanging(value);
					this.SendPropertyChanging();
					this._Prod_Image = value;
					this.SendPropertyChanged("Prod_Image");
					this.OnProd_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prod_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime Prod_CreateDate
		{
			get
			{
				return this._Prod_CreateDate;
			}
			set
			{
				if ((this._Prod_CreateDate != value))
				{
					this.OnProd_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._Prod_CreateDate = value;
					this.SendPropertyChanged("Prod_CreateDate");
					this.OnProd_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart", Storage="_Carts", ThisKey="Prod_Id", OtherKey="Cart_ProdID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Review", Storage="_Product_Reviews", ThisKey="Prod_Id", OtherKey="Review_ProdID")]
		public EntitySet<Product_Review> Product_Reviews
		{
			get
			{
				return this._Product_Reviews;
			}
			set
			{
				this._Product_Reviews.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_Reviews(Product_Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Reviews(Product_Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
}
#pragma warning restore 1591
